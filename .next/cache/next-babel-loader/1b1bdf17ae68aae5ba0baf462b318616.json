{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/safa/Documents/workspaces/workspace1/eventsProject/pages/Blog.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useContext } from 'react';\nimport axios from 'axios';\nimport { Context } from '../pages/Store';\nimport Post from '../Post/Post';\nimport './Blog.css';\n\nvar Blog = function Blog() {\n  _s();\n\n  var _useContext = useContext(Context),\n      state = _useContext[0],\n      dispatch = _useContext[1];\n\n  useEffect(function () {\n    axios.get('/posts.json').then(function (response) {\n      var postsData = response.data;\n      dispatch({\n        type: 'SET_POSTS',\n        payload: postsData\n      });\n    })[\"catch\"](function (error) {\n      dispatch({\n        type: 'SET_ERROR',\n        payload: error\n      });\n    });\n  }, []);\n\n  var posts = __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 15\n    }\n  }, \"Loading...\");\n\n  if (state.error) {\n    posts = __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }\n    }, \"Something went wrong: \", __jsx(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 31\n      }\n    }, state.error));\n  }\n\n  if (!state.error && state.posts) {\n    posts = state.posts.map(function (post) {\n      return __jsx(Post, {\n        key: post.id,\n        title: post.title,\n        author: post.author,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 14\n        }\n      });\n    });\n  }\n\n  return {\n    posts: posts\n  };\n};\n\n_s(Blog, \"mltmd/RDNrxkCWh2DlNZLIj6yIE=\");\n\n_c = Blog;\nexport default Blog;\n\nvar _c;\n\n$RefreshReg$(_c, \"Blog\");","map":{"version":3,"sources":["/home/safa/Documents/workspaces/workspace1/eventsProject/pages/Blog.js"],"names":["React","useEffect","useContext","axios","Context","Post","Blog","state","dispatch","get","then","response","postsData","data","type","payload","error","posts","map","post","id","title","author"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,QAA6C,OAA7C;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,gBAAxB;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAO,YAAP;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AAAA;;AAAA,oBACSJ,UAAU,CAACE,OAAD,CADnB;AAAA,MACVG,KADU;AAAA,MACHC,QADG;;AAGjBP,EAAAA,SAAS,CAAC,YAAM;AACdE,IAAAA,KAAK,CACFM,GADH,CACO,aADP,EAEGC,IAFH,CAEQ,UAAAC,QAAQ,EAAI;AAChB,UAAMC,SAAS,GAAGD,QAAQ,CAACE,IAA3B;AACAL,MAAAA,QAAQ,CAAC;AAAEM,QAAAA,IAAI,EAAE,WAAR;AAAqBC,QAAAA,OAAO,EAAEH;AAA9B,OAAD,CAAR;AACD,KALH,WAMS,UAAAI,KAAK,EAAI;AACdR,MAAAA,QAAQ,CAAC;AAAEM,QAAAA,IAAI,EAAE,WAAR;AAAqBC,QAAAA,OAAO,EAAEC;AAA9B,OAAD,CAAR;AACD,KARH;AASD,GAVQ,EAUN,EAVM,CAAT;;AAYA,MAAIC,KAAK,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAZ;;AAEA,MAAIV,KAAK,CAACS,KAAV,EAAiB;AACfC,IAAAA,KAAK,GACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCACwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOV,KAAK,CAACS,KAAb,CADxB,CADF;AAKD;;AAED,MAAI,CAACT,KAAK,CAACS,KAAP,IAAgBT,KAAK,CAACU,KAA1B,EAAiC;AAC/BA,IAAAA,KAAK,GAAGV,KAAK,CAACU,KAAN,CAAYC,GAAZ,CAAgB,UAAAC,IAAI,EAAI;AAC9B,aAAO,MAAC,IAAD;AAAM,QAAA,GAAG,EAAEA,IAAI,CAACC,EAAhB;AAAoB,QAAA,KAAK,EAAED,IAAI,CAACE,KAAhC;AAAuC,QAAA,MAAM,EAAEF,IAAI,CAACG,MAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAFO,CAAR;AAGD;;AAED,SAAO;AAAEL,IAAAA,KAAK,EAALA;AAAF,GAAP;AACD,CAhCD;;GAAMX,I;;KAAAA,I;AAkCN,eAAeA,IAAf","sourcesContent":["import React, { useEffect, useContext } from 'react'\n\nimport axios from 'axios'\nimport { Context } from '../pages/Store'\nimport Post from '../Post/Post'\nimport './Blog.css'\n\nconst Blog = () => {\n  const [state, dispatch] = useContext(Context)\n\n  useEffect(() => {\n    axios\n      .get('/posts.json')\n      .then(response => {\n        const postsData = response.data\n        dispatch({ type: 'SET_POSTS', payload: postsData })\n      })\n      .catch(error => {\n        dispatch({ type: 'SET_ERROR', payload: error })\n      })\n  }, [])\n\n  let posts = <p>Loading...</p>\n\n  if (state.error) {\n    posts = (\n      <p>\n        Something went wrong: <span>{state.error}</span>\n      </p>\n    )\n  }\n\n  if (!state.error && state.posts) {\n    posts = state.posts.map(post => {\n      return <Post key={post.id} title={post.title} author={post.author} />\n    })\n  }\n\n  return { posts }\n}\n\nexport default Blog\n"]},"metadata":{},"sourceType":"module"}