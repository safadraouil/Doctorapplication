{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/home/safa/Documents/workspaces/workspace1/eventsProject/pages/Blog.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useContext } from 'react';\nimport axios from 'axios';\nimport { Context } from '../pages/Store'; //import Post from '../Post/Post'\n//import './Blog.css'\n\nvar Blog = function Blog() {\n  _s();\n\n  var _useContext = useContext(Context),\n      state = _useContext[0],\n      dispatch = _useContext[1];\n  /*  useEffect(() => {\n    axios\n      .get('https://ws.med.tn/web/doctorInfos/?api_key=drmateri')\n      .then(response => {\n        const postsData = response.data\n        dispatch({ type: 'SET_POSTS', payload: postsData })\n      })\n      .catch(error => {\n        dispatch({ type: 'SET_ERROR', payload: error })\n      })\n  }, []) */\n\n\n  useEffect(function () {\n    var fetchData = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var result;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return axios('https://ws.med.tn/web/doctorInfos/?api_key=drmateri').then(function (response) {\n                  var postsData = response.data;\n                  dispatch({\n                    type: 'SET_POSTS',\n                    payload: postsData\n                  });\n                })[\"catch\"](function (error) {\n                  dispatch({\n                    type: 'SET_ERROR',\n                    payload: error\n                  });\n                });\n\n              case 2:\n                result = _context.sent;\n                console.log('ooooooooo', result.data);\n                setData(result.data[0]);\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function fetchData() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    fetchData();\n  }, []);\n\n  var posts = __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 15\n    }\n  }, \"Loading...\");\n\n  if (state.error) {\n    posts = __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }\n    }, \"Something went wrong: \", __jsx(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 31\n      }\n    }, state.error));\n  }\n  /*  if (!state.error && state.posts) {\n    posts = state.posts.map(post => {\n      return <Post key={post.id} title={post.title} author={post.author} />\n    })\n  }\n   return { posts } */\n\n\n  return {};\n};\n\n_s(Blog, \"mltmd/RDNrxkCWh2DlNZLIj6yIE=\");\n\n_c = Blog;\nexport default Blog;\n\nvar _c;\n\n$RefreshReg$(_c, \"Blog\");","map":{"version":3,"sources":["/home/safa/Documents/workspaces/workspace1/eventsProject/pages/Blog.js"],"names":["React","useEffect","useContext","axios","Context","Blog","state","dispatch","fetchData","then","response","postsData","data","type","payload","error","result","console","log","setData","posts"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,QAA6C,OAA7C;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,gBAAxB,C,CACA;AACA;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AAAA;;AAAA,oBACSH,UAAU,CAACE,OAAD,CADnB;AAAA,MACVE,KADU;AAAA,MACHC,QADG;AAGjB;;;;;;;;;;;;;AAYAN,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMO,SAAS;AAAA,0EAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACKL,KAAK,CACxB,qDADwB,CAAL,CAGlBM,IAHkB,CAGb,UAAAC,QAAQ,EAAI;AAChB,sBAAMC,SAAS,GAAGD,QAAQ,CAACE,IAA3B;AACAL,kBAAAA,QAAQ,CAAC;AAAEM,oBAAAA,IAAI,EAAE,WAAR;AAAqBC,oBAAAA,OAAO,EAAEH;AAA9B,mBAAD,CAAR;AACD,iBANkB,WAOZ,UAAAI,KAAK,EAAI;AACdR,kBAAAA,QAAQ,CAAC;AAAEM,oBAAAA,IAAI,EAAE,WAAR;AAAqBC,oBAAAA,OAAO,EAAEC;AAA9B,mBAAD,CAAR;AACD,iBATkB,CADL;;AAAA;AACVC,gBAAAA,MADU;AAYhBC,gBAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBF,MAAM,CAACJ,IAAhC;AACAO,gBAAAA,OAAO,CAACH,MAAM,CAACJ,IAAP,CAAY,CAAZ,CAAD,CAAP;;AAbgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAH;;AAAA,sBAATJ,SAAS;AAAA;AAAA;AAAA,OAAf;;AAeAA,IAAAA,SAAS;AACV,GAjBQ,EAiBN,EAjBM,CAAT;;AAmBA,MAAIY,KAAK,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAZ;;AAEA,MAAId,KAAK,CAACS,KAAV,EAAiB;AACfK,IAAAA,KAAK,GACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCACwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOd,KAAK,CAACS,KAAb,CADxB,CADF;AAKD;AAED;;;;;;;;AAQA,SAAO,EAAP;AACD,CArDD;;GAAMV,I;;KAAAA,I;AAuDN,eAAeA,IAAf","sourcesContent":["import React, { useEffect, useContext } from 'react'\n\nimport axios from 'axios'\nimport { Context } from '../pages/Store'\n//import Post from '../Post/Post'\n//import './Blog.css'\n\nconst Blog = () => {\n  const [state, dispatch] = useContext(Context)\n\n  /*  useEffect(() => {\n    axios\n      .get('https://ws.med.tn/web/doctorInfos/?api_key=drmateri')\n      .then(response => {\n        const postsData = response.data\n        dispatch({ type: 'SET_POSTS', payload: postsData })\n      })\n      .catch(error => {\n        dispatch({ type: 'SET_ERROR', payload: error })\n      })\n  }, []) */\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await axios(\n        'https://ws.med.tn/web/doctorInfos/?api_key=drmateri'\n      )\n        .then(response => {\n          const postsData = response.data\n          dispatch({ type: 'SET_POSTS', payload: postsData })\n        })\n        .catch(error => {\n          dispatch({ type: 'SET_ERROR', payload: error })\n        })\n\n      console.log('ooooooooo', result.data)\n      setData(result.data[0])\n    }\n    fetchData()\n  }, [])\n\n  let posts = <p>Loading...</p>\n\n  if (state.error) {\n    posts = (\n      <p>\n        Something went wrong: <span>{state.error}</span>\n      </p>\n    )\n  }\n\n  /*  if (!state.error && state.posts) {\n    posts = state.posts.map(post => {\n      return <Post key={post.id} title={post.title} author={post.author} />\n    })\n  }\n\n  return { posts } */\n\n  return {}\n}\n\nexport default Blog\n"]},"metadata":{},"sourceType":"module"}